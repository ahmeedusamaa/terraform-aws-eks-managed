apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: 3-tier-app
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io

  annotations:
    argocd-image-updater.argoproj.io/3-tier-app.update-strategy: semver

    # Tells Argo CD Image Updater which images to watch and update even if your prefix matches more.
    argocd-image-updater.argoproj.io/image-list:  backend=384747603695.dkr.ecr.ap-south-1.amazonaws.com/ecr-back:1.1.x, frontend=384747603695.dkr.ecr.ap-south-1.amazonaws.com/ecr-front:1.1.x
    argocd-image-updater.argoproj.io/frontend.helm.image-name: frontend.image.repository
    argocd-image-updater.argoproj.io/frontend.helm.image-tag: frontend.image.tag
    
    # argocd-image-updater.argoproj.io/backend-update-strategy: semver
    argocd-image-updater.argoproj.io/backend.helm.image-name: backend.image.repository
    argocd-image-updater.argoproj.io/backend.helm.image-tag: backend.image.tag
    
    # Specifies how the image updater should write back updates.
    # Clones the Git repo Argo CD is synced to
    # Switches to master branch
    # Finds the YAML file defining the app
    # Changes the image: field to the new tag
    # Commits & pushes the change using the token in argocd/github-credentials secret
    argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/github-credentials
    argocd-image-updater.argoproj.io/git-branch: main
    # When this Application is deleted, clean up all the Kubernetes resources it created.


spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: default
  source:
    repoURL: git@github.com:ahmeedusamaa/app-gitops.git
    targetRevision: main
    path: "."
    helm:
      valueFiles:
        - values.yaml
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=false
      - Validate=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true